% OBJECTIVE: Calculate #####
function obj = row(obj,idstr)
% obj = fn(obj,idstr)
%
%% INPUT
% obj = 
% idstr = 
%% OUTPUT
% obj = 
%
%% REQUIRMENT
% 
% 
%% EXMAPLE
% 
% 
%% SEE ALSO
%
% 
%% AUTHOR: linrenwen@gmail.com
%% VERSION: v1.0 2019/02/21


%% Part 1, Data
switch class(idstr)
case {'string','char'}
    % for example 'cola>3&colb>4' to 'T.cola > 3 & T.colb > 4'
    idstrfull = strrow2strtablerow(obj, idstr);
    obj.rowselected = eval(idstrfull);
    
%     evalin('caller',strcat('obj.rowselected = ', idstrfull));
%     disp(obj.rowselected);
%     ''
case {'double'}
    ind2sub
case {'logical'}
    
otherwise
    error('the data type of idstr in wrong');
end
idstr;

%% Part 2, Calculation


%% Part 3, Output of result


%% Part 4, Demo of result


%% Part 5, Appendix

function idstrfull = strrow2strtablerow(obj, idstr)
    % for example 'cola >3&colb >4' to 'T.cola > 3 & T.colb > 4'
    varsname =  string(obj.tableProperties.VariableNames)';
    [~, orderstr] = sort(strlength(varsname),'descend');
    varsname = varsname(orderstr);
    Tname = obj.tablename;
    %     varsnameinT = Tname +"."+ varsname;
    varsnameinT = "obj.table."+ varsname;
    strop = [" .^ ", ".^";
    " ^ ", "^";
    " .^ ", ". ^";
    " ./ ", "./";
    " .\ ", ".\";
    " + ", "+";
    " ~ ", "~";
    " - ", "-";
    " * ",  "*";
    " / ", "/";
    " \ ", "\";
    " ./ ", ". /";
    " .\ ", ". \";
    "( " , "(";
    " )" , ")";
    " : " , ":";
    " >= ", ">=";
    " == ", "==";
    " <= ", "<=";
    " > ", ">";
    " < ", "<";
    " = ", "=";
    " >= ", ">=";
    " == ", "==";
    " <= ", "<=";
    
    " && " ;
    " || " ;
    " & " ;
    " | " ];
    yxops =cellstr([strop,strtrim(strop)]);
    idstr = strrepbatch(idstr, yxops);
    yx = cellstr([varsnameinT, varsname+" "]);
    idstrfull = strrepbatch(idstr, yx);
    idstrfull = strcat(idstrfull,';');
end

end

